{"version":3,"sources":["config/firebaseConfig.js","store/reducers/appStatusReducer.ts","store/reducers/authReducer.ts","components/layout/Checkbox.tsx","components/layout/SignedInLinks.tsx","components/layout/SignedOutLinks.tsx","components/layout/Navbar.tsx","store/reducers/projectReducer.ts","components/projects/ProjectSummary.tsx","components/projects/ProjectsList.tsx","components/common/Modal.tsx","components/layout/ProjectHeader.tsx","components/dashboard/Dashboard.tsx","components/projects/ProjectDetails.tsx","components/common/Preloader.tsx","components/auth/SignIn.tsx","components/auth/SignUp.tsx","components/projects/CreateProject.tsx","App.tsx","reportWebVitals.ts","store/store.ts","helpers/AuthIsInitialized.tsx","index.tsx"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","projectFirestore","firestore","authFirebase","auth","timestamp","FieldValue","serverTimestamp","TOGGLE_LOADING","SET_REDIRECTION_URL","TOGGLE_IS_MODAL","TOGGLE_IS_MINE","initState","loading","isModalOpen","url","isMine","toggleLoadingAC","type","toggleIsModalOpenAC","isOpen","setUrl","authError","CheckBox","dispatch","useDispatch","useSelector","state","appStatus","className","onClick","e","preventDefault","id","checked","SignedInLinks","profile","logOutHandler","email","signOut","then","res","toast","info","catch","err","error","message","to","initials","SignedOutLinks","Navbar","uid","ADD_PROJECT","DELETE_PROJECT","SET_PROJECTS","UPDATE_PROJECTS","UPDATE_PROJECT_STATUS","projects","addProject","project","projectForFirestore","createdAt","collection","add","orderBy","limit","get","querySnapshot","forEach","data","addProjectAC","title","description","userFirstName","userLastName","userId","projectStatus","success","finally","deleteProject","doc","delete","deleteProjectAC","updateProject","dataForUpdate","updatedProjectId","update","updateProjectStatus","status","updateProjectStatusAC","getProjectsFromFirebase","projectsFromServer","push","ProjectSummary","props","moment","toDate","fromNow","setProjectIdForModal","ProjectsList","map","Modal","projectForModal","find","projectIdForModal","useState","setTitle","setDescription","htmlFor","value","onChange","target","autoFocus","ProjectHeader","Dashboard","projectsToBeRendered","filter","projectsInProgress","projectsUnderTesting","projectsWaitingToBeApproved","useEffect","length","ProjectDetails","useParams","singleProject","format","Preloader","size","color","SignIn","setEmail","password","setPassword","onSubmit","credentials","signInWithEmailAndPassword","user","SignInErrorAC","SignUp","firstName","setFirstName","lastName","setLastName","newUser","createUserWithEmailAndPassword","set","SignUpErrorAC","CreateProject","projectFromForm","App","position","style","fontSize","textAlign","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","console","log","firebaseReducer","firestoreReducer","store","createStore","compose","reduxFirestore","applyMiddleware","thunk","withExtraArgument","getFirestore","getFirebase","rrfProps","config","createFirestoreInstance","useFirestoreForProfile","userProfile","attachAuthIsReady","window","AuthIsInitialized","children","isLoaded","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.984677b8.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nexport const firebaseConfig = {\r\n   apiKey: \"AIzaSyAoiQDQ0uj3l1_XZbRlBarC-qk-IECqfYo\",\r\n   authDomain: \"task-manager-arsen.firebaseapp.com\",\r\n   databaseURL: \"https://task-manager-arsen.firebaseio.com\",\r\n   projectId: \"task-manager-arsen\",\r\n   storageBucket: \"task-manager-arsen.appspot.com\",\r\n   messagingSenderId: \"591272411109\",\r\n   appId: \"1:591272411109:web:4d85f1afa58b4bd614b90c\",\r\n};\r\n\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const projectFirestore = firebase.firestore();\r\nexport const authFirebase = firebase.auth()\r\nexport const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport default firebase\r\n","const TOGGLE_LOADING = \"TOGGLE_LOADING\";\r\nconst SET_REDIRECTION_URL = \"SET_REDIRECTION_URL\";\r\nconst TOGGLE_IS_MODAL = \"TOGGLE_IS_MODAL\";\r\nconst TOGGLE_IS_MINE = \"TOGGLE_IS_MINE\";\r\n\r\n\r\nconst initState = {\r\n  loading: false,\r\n  isModalOpen: false,\r\n  url: \"\",\r\n  isMine: false,\r\n}\r\n\r\n\r\nexport const appStatusReducer = (state = initState, action: ActionType) => {\r\n  switch (action.type) {\r\n    case TOGGLE_LOADING:\r\n      return {...state, loading: !state.loading}\r\n    case SET_REDIRECTION_URL:\r\n      return {...state, url: action.url}\r\n    case TOGGLE_IS_MODAL:\r\n      return {...state, isModalOpen: action.isOpen}\r\n    case TOGGLE_IS_MINE:\r\n      return {...state, isMine: !state.isMine}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const toggleLoadingAC = (loading: boolean) => ({type: TOGGLE_LOADING, loading } as const)\r\nexport const toggleIsModalOpenAC = (isOpen: boolean) => ({type: TOGGLE_IS_MODAL, isOpen } as const)\r\nexport const toggleIsMine = () => ({type: TOGGLE_IS_MINE} as const)\r\nexport const setUrl = (url: string) => ({type: SET_REDIRECTION_URL, url } as const)\r\n\r\n\r\ntype ActionType =\r\n  | ReturnType<typeof toggleLoadingAC>\r\n  | ReturnType<typeof toggleIsModalOpenAC>\r\n  | ReturnType<typeof setUrl>\r\n  | ReturnType<typeof toggleIsMine>\r\n\r\nexport type AppStatusReducerType = {\r\n  loading: boolean,\r\n  url: string,\r\n  isModalOpen: boolean,\r\n  isMine: boolean,\r\n}","import {Dispatch} from \"react\";\r\nimport {authFirebase, projectFirestore} from \"../../config/firebaseConfig\";\r\nimport {toggleLoadingAC} from \"./appStatusReducer\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst SIGNIN_SUCCESS = \"SIGNIN_SUCCESS\";\r\nconst SIGNIN_ERROR = \"SIGNIN_ERROR\";\r\nconst SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nconst SIGNUP_ERROR = \"SIGNUP_ERROR\";\r\n\r\nconst initState = {\r\n  authError: null,\r\n}\r\n\r\n\r\nexport const authReducer = (state = initState, action: ActionType) => {\r\n  switch (action.type) {\r\n    case \"SIGNIN_ERROR\":\r\n      console.log(\"Login err\", action.err)\r\n      return {...state, authError: action.err.message}\r\n    case \"SIGNIN_SUCCESS\":\r\n      console.log(\"Logged in successfully\")\r\n      return {...state, authError: null}\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signed up successfully\")\r\n      return {...state, authError: null}\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"Sign up error => \", action.err)\r\n      return {...state, authError: action.err.message}\r\n  }\r\n  return state\r\n}\r\n\r\n// Actions\r\nconst SignInSuccessAC = () => ({type: SIGNIN_SUCCESS} as const)\r\nconst SignInErrorAC = (err: ErrorType) => ({type: SIGNIN_ERROR, err} as const)\r\nconst SignUpSuccessAC = () => ({type: SIGNUP_SUCCESS} as const)\r\nconst SignUpErrorAC = (err: ErrorType) => ({type: SIGNUP_ERROR, err} as const)\r\n\r\n//THUNKS\r\nexport const signIn = (credentials: { email: string, password: string }) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(toggleLoadingAC(true))\r\n    authFirebase.signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then((res) => {\r\n        dispatch(SignInSuccessAC())\r\n        toast.info(`User with email: ${res.user?.email} has signed in`)\r\n      })\r\n      .catch((err: ErrorType) => {\r\n      dispatch(SignInErrorAC(err))\r\n        toast.error(err.message)\r\n    })\r\n      .finally(() => {\r\n        dispatch(toggleLoadingAC(false))\r\n      })\r\n  }\r\n}\r\nexport const signOut = (email: string | null) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    authFirebase.signOut()\r\n      .then((res) => {\r\n        toast.info(`User with email: ${email} has signed out`)\r\n      }).catch((err: ErrorType) => {\r\n      toast.error(err.message)\r\n    })\r\n  }\r\n}\r\nexport const signUp = (newUser: NewUserType) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(toggleLoadingAC(true))\r\n    authFirebase.createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((res) => {\r\n        return projectFirestore.collection(\"users\").doc(res.user?.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        })\r\n      })\r\n      .then((res) => {\r\n        toast.success(`User with email ${newUser.email} has been added`)\r\n        dispatch(SignUpSuccessAC())\r\n      })\r\n      .catch((err: ErrorType) => {\r\n        dispatch(SignUpErrorAC(err))\r\n        toast.error(err.message)\r\n    })\r\n      .finally(() => {\r\n        dispatch(toggleLoadingAC(false))\r\n      })\r\n  }\r\n}\r\n\r\ntype ActionType =\r\n  | ReturnType<typeof SignInSuccessAC>\r\n  | ReturnType<typeof SignInErrorAC>\r\n  | ReturnType<typeof SignUpSuccessAC>\r\n  | ReturnType<typeof SignUpErrorAC>\r\n\r\ntype ErrorType = {\r\n  a: null,\r\n  code: string,\r\n  message: string\r\n}\r\ntype NewUserType = {\r\n  email: string,\r\n  password: string,\r\n  firstName: string,\r\n  lastName: string\r\n}\r\nexport type AuthReducerType = {\r\n  authError: string | null\r\n}\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {appStatusReducer, toggleIsMine} from \"../../store/reducers/appStatusReducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\n\r\n\r\nconst CheckBox = () => {\r\n  const dispatch = useDispatch()\r\n  const {isMine} = useSelector<AppRootStateType, ReturnType<typeof appStatusReducer>>(state => state.appStatus)\r\n\r\n\r\n  const checkBoxHandler = (e: React.BaseSyntheticEvent<MouseEvent, EventTarget & HTMLElement, EventTarget>) => {\r\n    e.preventDefault()\r\n    dispatch(toggleIsMine())\r\n  }\r\n\r\n  return (\r\n    <div className={\"checkbox\"}>\r\n      <label onClick={checkBoxHandler}>\r\n        <input id={\"indeterminate-checkbox\"} type={\"checkbox\"} checked={isMine}/>\r\n        <span>My projects only</span>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckBox","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {signOut} from \"../../store/reducers/authReducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {firebaseReducer} from \"react-redux-firebase\";\r\nimport CheckBox from \"./Checkbox\";\r\n\r\nconst SignedInLinks = () => {\r\n  const dispatch = useDispatch()\r\n  const { profile, auth } = useSelector<AppRootStateType, ReturnType<typeof firebaseReducer>>(state => state.firebase)\r\n\r\n  const logOutHandler = (email: string | null) => {\r\n    dispatch(signOut(email))\r\n  }\r\n\r\n  return (\r\n      <ul className={'right'}>\r\n        <li>\r\n          <CheckBox/>\r\n        </li>\r\n        <li>\r\n          <NavLink to={'/create'} className={\"navLink\"}> New Project </NavLink>\r\n        </li>\r\n        <li>\r\n          <a onClick={() => logOutHandler(auth.email)} className={\"navLink\"}> Log Out </a>\r\n        </li>\r\n        <li>\r\n          <NavLink to={'/'} className={'btn btn-floating green lighten-3 navLink'}> {profile.initials} </NavLink>\r\n        </li>\r\n\r\n      </ul>\r\n  )\r\n}\r\n\r\nexport default SignedInLinks","import React from \"react\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className={'right'}>\r\n      <li><NavLink to={'/signin'} className={\"navLink\"}> Log In </NavLink></li>\r\n      <li><NavLink to={'/signup'} className={\"navLink\"}> Sign Up </NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {firebaseReducer} from \"react-redux-firebase\";\r\n\r\nconst Navbar = () => {\r\n  const { auth } = useSelector<AppRootStateType, ReturnType<typeof firebaseReducer>>(state => state.firebase)\r\n\r\n  return (\r\n    <div className=\"navbar-fixed\">\r\n      <nav className='nav-wrapper'>\r\n        <div className='container'>\r\n          <Link to={'/'} className={'brand-logo hide-on-small-and-down'}> TASK-MANAGER </Link>\r\n          {auth.uid ? < SignedInLinks/> : < SignedOutLinks/>}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar","import {Dispatch} from \"react\";\r\nimport {projectFirestore, timestamp} from \"../../config/firebaseConfig\"\r\nimport {setUrl, toggleIsModalOpenAC, toggleLoadingAC} from \"./appStatusReducer\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst ADD_PROJECT = 'ADD_PROJECT';\r\nconst DELETE_PROJECT = 'DELETE_PROJECT';\r\nconst SET_PROJECTS = 'SET_PROJECTS';\r\nconst UPDATE_PROJECTS = 'UPDATE_PROJECTS';\r\nconst UPDATE_PROJECT_STATUS = 'UPDATE_PROJECT_STATUS';\r\n\r\nconst initState = {\r\n  projects: []\r\n}\r\nexport const projectReducer = (state = initState, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case ADD_PROJECT:\r\n      return {...state, projects: [action.project, ...state.projects]}\r\n    case DELETE_PROJECT:\r\n      return {...state, projects: state.projects.filter((project: ProjectType) => project.projectId !== action.id)}\r\n    case SET_PROJECTS:\r\n      return {...state, projects: action.data}\r\n    case UPDATE_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.map(\r\n          (project: ProjectType) => project.projectId === action.data.updatedProjectId\r\n            ? {...project, title: action.data.title, description: action.data.description}\r\n            : project\r\n        )\r\n      }\r\n    case UPDATE_PROJECT_STATUS:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.map(\r\n          (project: ProjectType) => project.projectId === action.projectId ? {...project, projectStatus: action.status} : project\r\n        )\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//ACTIONS\r\nexport const addProjectAC = (project: ProjectType) => ({type: ADD_PROJECT, project} as const)\r\nexport const deleteProjectAC = (id: string | undefined) => ({type: DELETE_PROJECT, id} as const)\r\nexport const updateProjectAC = (data: UpdateType) => ({type: UPDATE_PROJECTS, data} as const)\r\nexport const setProjectsAC = (data: ProjectType[]) => ({type: SET_PROJECTS, data} as const)\r\nexport const updateProjectStatusAC = (status: ProjectStatusType, projectId: string | undefined) => ({\r\n  type: UPDATE_PROJECT_STATUS,\r\n  status,\r\n  projectId\r\n} as const)\r\n\r\n//THUNKS\r\nexport const addProject = (project: ProjectType) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(toggleLoadingAC(true))\r\n    // call to cloud firestore\r\n    const projectForFirestore = {\r\n      ...project,\r\n      createdAt: timestamp()\r\n    }\r\n    projectFirestore.collection('projects').add({\r\n      ...projectForFirestore\r\n    })\r\n      .then(() => {\r\n        projectFirestore.collection('projects').orderBy(\"createdAt\", \"desc\").limit(1).get()\r\n          .then((querySnapshot) => {\r\n            querySnapshot.forEach((project) => {\r\n              const id = project.id\r\n              const data = project.data()\r\n              dispatch(addProjectAC({\r\n                projectId: id,\r\n                title: data.title,\r\n                description: data.description,\r\n                createdAt: data.createdAt,\r\n                userFirstName: data.userFirstName,\r\n                userLastName: data.userLastName,\r\n                userId: data.userId,\r\n                projectStatus: data.projectStatus,\r\n              }))\r\n              dispatch(setUrl(\"/\"))\r\n              toast.success(\"Project successfully added\")\r\n            });\r\n          })\r\n          .catch((err: any) => {\r\n            toast.error(err.message)\r\n          })\r\n      })\r\n      .catch((err: any) => {\r\n        toast.error(err.message)\r\n      })\r\n      .finally(() => {\r\n        dispatch(toggleLoadingAC(false))\r\n      })\r\n  }\r\n}\r\nexport const deleteProject = (id: string | undefined) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    projectFirestore.collection(\"projects\").doc(id).delete()\r\n      .then(() => {\r\n        dispatch(deleteProjectAC(id))\r\n        toast.success(\"Project successfully deleted\")\r\n      })\r\n      .catch((err: any) => {\r\n        toast.error(err.message)\r\n      })\r\n  }\r\n}\r\nexport const updateProject = (dataForUpdate: UpdateType) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(toggleLoadingAC(true))\r\n    projectFirestore.collection(\"projects\").doc(dataForUpdate.updatedProjectId).update({\r\n      title: dataForUpdate.title,\r\n      description: dataForUpdate.description\r\n    })\r\n      .then(() => {\r\n        dispatch(updateProjectAC(dataForUpdate))\r\n        dispatch(toggleIsModalOpenAC(false))\r\n        toast.success(\"Project successfully updated\")\r\n      })\r\n      .catch((err: any) => {\r\n        toast.error(err.message)\r\n      })\r\n      .finally(() => {\r\n        dispatch(toggleLoadingAC(false))\r\n      })\r\n  }\r\n}\r\nexport const updateProjectStatus = (status: ProjectStatusType, projectId: string | undefined) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(toggleLoadingAC(true))\r\n    projectFirestore.collection(\"projects\").doc(projectId).update({\r\n      projectStatus: status,\r\n    })\r\n      .then(() => {\r\n        dispatch(updateProjectStatusAC(status, projectId))\r\n        toast.success(\"Project status successfully updated\")\r\n      })\r\n      .catch((err: any) => {\r\n        toast.error(err.message)\r\n      })\r\n      .finally(() => {\r\n        dispatch(toggleLoadingAC(false))\r\n      })\r\n  }\r\n}\r\nexport const getProjectsFromFirebase = (dispatch: Dispatch<any>) => {\r\n  const projectsFromServer: ProjectType[] = []\r\n  projectFirestore.collection(\"projects\").orderBy(\"createdAt\", \"desc\").get()\r\n    .then((querySnapshot) => {\r\n      querySnapshot.forEach((project) => {\r\n        const id = project.id\r\n        const data = project.data()\r\n        projectsFromServer.push({\r\n          projectId: id,\r\n          title: data.title,\r\n          description: data.description,\r\n          createdAt: data.createdAt,\r\n          userFirstName: data.userFirstName,\r\n          userLastName: data.userLastName,\r\n          userId: data.userId,\r\n          projectStatus: data.projectStatus,\r\n        })\r\n      });\r\n      dispatch(setProjectsAC(projectsFromServer))\r\n    })\r\n    .catch((err) => {\r\n      toast.error(err.message)\r\n    })\r\n}\r\n\r\n\r\ntype ActionTypes =\r\n  | ReturnType<typeof addProjectAC>\r\n  | ReturnType<typeof deleteProjectAC>\r\n  | ReturnType<typeof setProjectsAC>\r\n  | ReturnType<typeof updateProjectAC>\r\n  | ReturnType<typeof updateProjectStatusAC>\r\n\r\n\r\nexport type ProjectType = {\r\n  title: string,\r\n  description: string,\r\n  userFirstName: string,\r\n  userLastName: string,\r\n  userId: string\r\n  createdAt?: any,\r\n  projectId?: string,\r\n  projectStatus: ProjectStatusType,\r\n}\r\ntype ProjectStatusType = \"progress\" | \"testing\" | \"waitingForApprove\"\r\ntype UpdateType = {\r\n  title: string | undefined,\r\n  description: string | undefined,\r\n  updatedProjectId: string | undefined\r\n}\r\nexport type ProjectReducerType = {\r\n  projects: ProjectType[]\r\n}\r\n","import React, {Dispatch, SetStateAction} from \"react\";\r\nimport {deleteProject, ProjectType, updateProjectStatus} from \"../../store/reducers/projectReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {firebaseReducer} from \"react-redux-firebase\";\r\nimport {toggleIsModalOpenAC} from \"../../store/reducers/appStatusReducer\";\r\nimport moment from \"moment\";\r\n\r\ntype ProjectSummaryType = {\r\n  project: ProjectType,\r\n  setProjectIdForModal: Dispatch<SetStateAction<string>>\r\n}\r\n\r\nconst ProjectSummary = (props: ProjectSummaryType) => {\r\n  const dispatch = useDispatch()\r\n  const {auth} = useSelector<AppRootStateType, ReturnType<typeof firebaseReducer>>(state => state.firebase)\r\n\r\n  const removeHandler = (e: React.BaseSyntheticEvent<MouseEvent, EventTarget & HTMLElement, EventTarget>) => {\r\n    e.preventDefault()\r\n    dispatch(deleteProject(props.project.projectId))\r\n  }\r\n  const editHandler = (e: React.BaseSyntheticEvent<MouseEvent, EventTarget & HTMLElement, EventTarget>) => {\r\n    e.preventDefault()\r\n    dispatch(toggleIsModalOpenAC(true))\r\n    props.setProjectIdForModal(props.project.projectId || '')\r\n  }\r\n  const returnButtonHandler = (e: React.BaseSyntheticEvent<MouseEvent, EventTarget & HTMLElement, EventTarget>) => {\r\n    e.preventDefault()\r\n    if (props.project.projectStatus === \"testing\") {\r\n      dispatch(updateProjectStatus(\"progress\", props.project.projectId))\r\n    } else {\r\n      dispatch(updateProjectStatus(\"testing\", props.project.projectId))\r\n    }\r\n  }\r\n  const proceedButtonHandler = (e: React.BaseSyntheticEvent<MouseEvent, EventTarget & HTMLElement, EventTarget>) => {\r\n    e.preventDefault()\r\n    if (props.project.projectStatus === \"progress\") {\r\n      dispatch(updateProjectStatus(\"testing\", props.project.projectId))\r\n    } else {\r\n      dispatch(updateProjectStatus(\"waitingForApprove\", props.project.projectId))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={'card z-depth-4 projectSummary'}>\r\n      <div className={'card-content grey-text text-darken-3'}>\r\n        <span className={'card-title'}>  {props.project.title}  </span>\r\n        <p> <strong> Posted by:  </strong>{props.project.userFirstName} {props.project.userLastName}</p>\r\n        <p className={'grey-text'}> <strong> Created: </strong>{moment(props.project.createdAt.toDate()).fromNow()}</p>\r\n\r\n        {/*!====>>>>>> Icons for editing and deleting project. Only project starter can edit or delete project <<<<<=======!*/}\r\n\r\n        {\r\n          props.project.userId === auth.uid &&\r\n          <div className={\"iconsBlock\"}>\r\n             <i className=\"material-icons\" onClick={editHandler}> edit </i>\r\n             <i className=\"material-icons\" onClick={removeHandler}> delete_forever </i>\r\n          </div>\r\n        }\r\n\r\n        {/*----------------------------------------------------------------------------------------------------------------------*/}\r\n\r\n        {/*!====>>>>>> Buttons that are changing project status. Only project starter can change the status <<<<<=======!*/}\r\n\r\n        <div className={\"card-action btn-group\"}>\r\n          <button\r\n            className={`btn waves-effect waves-light btn-small green lighten-2 \r\n            ${props.project.projectStatus === \"progress\" || props.project.userId !== auth.uid ? \"disabled\" : \"\"}`}\r\n            onClick={returnButtonHandler}>\r\n            Return\r\n            <i className=\"material-icons left\">fast_rewind</i>\r\n          </button>\r\n          <button\r\n            className={`btn waves-effect waves-light btn-small green lighten-2 \r\n            ${props.project.projectStatus === \"waitingForApprove\" || props.project.userId !== auth.uid ? \"disabled\" : \"\"}`}\r\n            onClick={proceedButtonHandler}>\r\n            Proceed\r\n            <i className=\"material-icons right\">fast_forward</i>\r\n          </button>\r\n        </div>\r\n\r\n        {/*----------------------------------------------------------------------------------------------------------------------*/}\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary","import React, { Dispatch, SetStateAction } from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { ProjectType } from \"../../store/reducers/projectReducer\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype ProjectsListType = {\r\n  setProjectIdForModal: Dispatch<SetStateAction<string>>\r\n  projects: ProjectType[]\r\n}\r\n\r\nconst ProjectsList = (props: ProjectsListType) => {\r\n\r\n  return (\r\n    <div className={'projectsList section'}>\r\n      {\r\n        props.projects.map((project: ProjectType) => {\r\n          return (\r\n            <Link key={project.projectId} to={`/project/${project.projectId}`}>\r\n              <ProjectSummary project={project} setProjectIdForModal={props.setProjectIdForModal}/>\r\n            </Link>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectsList","import React, {Dispatch, SetStateAction, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {ProjectReducerType, updateProject} from \"../../store/reducers/projectReducer\";\r\nimport {toggleIsModalOpenAC} from \"../../store/reducers/appStatusReducer\";\r\n\r\ntype ModalPropsType = {\r\n  projectIdForModal: string,\r\n}\r\n\r\nconst Modal = (props: ModalPropsType) => {\r\n  const dispatch = useDispatch()\r\n  const { projects } = useSelector<AppRootStateType, ProjectReducerType>(state => state.project)\r\n  const projectForModal = projects?.find(project => project.projectId === props.projectIdForModal)\r\n\r\n  const [title, setTitle] = useState(projectForModal?.title)\r\n  const [description, setDescription] = useState(projectForModal?.description)\r\n\r\n  const projectEditHandler = () => {\r\n    const dataForUpdate = {\r\n      title,\r\n      description,\r\n      updatedProjectId: projectForModal?.projectId\r\n    }\r\n    dispatch(updateProject(dataForUpdate))\r\n  }\r\n  const dismissHandler = () => {\r\n    dispatch(toggleIsModalOpenAC(false))\r\n  }\r\n\r\n  return (\r\n    <div className={\"modal-container\"}>\r\n      <div className={\"modal\"}>\r\n        <div className={\"modal-content\"}>\r\n          <h4> Edit project </h4>\r\n          <div className={'input-field'}>\r\n            <label htmlFor=\"title\"> Project Title </label>\r\n            <input type={\"text\"}\r\n                   id={'title'}\r\n                   value={title}\r\n                   onChange={e => setTitle(e.target.value)}\r\n                   autoFocus={true}/>\r\n          </div>\r\n          <div className={'input-field'}>\r\n            <label htmlFor=\"description\"> Project Description </label>\r\n            <textarea className={'materialize-textarea'}\r\n                      id={'description'}\r\n                      value={description}\r\n                      onChange={e => setDescription(e.target.value)}\r\n                      autoFocus={true}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={\"modal-footer\"}>\r\n          <a className=\"modal-close waves-effect waves-green btn-flat\"\r\n             onClick={projectEditHandler}>\r\n            Edit\r\n          </a>\r\n          <a className=\"modal-close waves-effect waves-green btn-flat\"\r\n             onClick={dismissHandler}>\r\n            Dismiss\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Modal\r\n\r\n","import React from \"react\";\r\n\r\nconst ProjectHeader = () => {\r\n  return(\r\n    <div className=\"row projects-header\">\r\n      <div className=\"col s4 center projects-header-item\">\r\n        In progress\r\n      </div>\r\n      <div className=\"col s4 center projects-header-item\">\r\n        Under testing\r\n      </div>\r\n      <div className=\"col s4 center projects-header-item\">\r\n        Waiting to be approved\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectHeader","import React, {useEffect, useState} from 'react'\r\nimport ProjectsList from \"../projects/ProjectsList\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {appStatusReducer, setUrl, toggleIsMine} from \"../../store/reducers/appStatusReducer\";\r\nimport {firebaseReducer} from \"react-redux-firebase\";\r\nimport Modal from \"../common/Modal\";\r\nimport {getProjectsFromFirebase, ProjectReducerType} from \"../../store/reducers/projectReducer\";\r\nimport ProjectHeader from \"../layout/ProjectHeader\";\r\n\r\n\r\n\r\nconst Dashboard = () => {\r\n  const [projectIdForModal, setProjectIdForModal] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  const {auth} = useSelector<AppRootStateType, ReturnType<typeof firebaseReducer>>(state => state.firebase)\r\n  const {url, isModalOpen, isMine} = useSelector<AppRootStateType, ReturnType<typeof appStatusReducer>>(state => state.appStatus)\r\n  const {projects} = useSelector<AppRootStateType, ProjectReducerType>(state => state.project)\r\n  // ==========>>>>>>>>>>>>>>> This line is handling the checkbox from navbar\r\n  const projectsToBeRendered = !isMine ? projects : projects.filter(project => project.userId === auth.uid)\r\n  // ==========>>>>>>>>>>>>>>> Next 3 lines are for dividing projects into columns\r\n  const projectsInProgress = projectsToBeRendered.filter(project => project.projectStatus === \"progress\")\r\n  const projectsUnderTesting = projectsToBeRendered.filter(project => project.projectStatus === \"testing\")\r\n  const projectsWaitingToBeApproved = projectsToBeRendered.filter(project => project.projectStatus === \"waitingForApprove\")\r\n\r\n  useEffect(() => {\r\n    if (projects.length === 0) {\r\n      dispatch(getProjectsFromFirebase)\r\n    }\r\n  }, [dispatch])\r\n\r\n  if (!auth.uid) {\r\n    return <Redirect to={\"/signin\"}/>\r\n  }\r\n\r\n  if (url) {\r\n    dispatch(setUrl(\"\"))\r\n  }\r\n\r\n  return (\r\n    <div className={'dashboard container'}>\r\n      <ProjectHeader/>\r\n      <div className=\"row projects-content\">\r\n        <div className=\"col s4\">\r\n          <ProjectsList setProjectIdForModal={setProjectIdForModal} projects={projectsInProgress}/>\r\n          {isModalOpen && <Modal projectIdForModal={projectIdForModal}/>}\r\n        </div>\r\n        <div className=\"col s4\">\r\n          <ProjectsList setProjectIdForModal={setProjectIdForModal} projects={projectsUnderTesting}/>\r\n          {isModalOpen && <Modal projectIdForModal={projectIdForModal}/>}\r\n        </div>\r\n        <div className=\"col s4\">\r\n          <ProjectsList setProjectIdForModal={setProjectIdForModal} projects={projectsWaitingToBeApproved}/>\r\n          {isModalOpen && <Modal projectIdForModal={projectIdForModal}/>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard","import React from \"react\";\r\nimport {Link, Redirect, useParams} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {ProjectReducerType} from \"../../store/reducers/projectReducer\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = () => {\r\n  const {id}: { id: string } = useParams();\r\n  const {projects} = useSelector<AppRootStateType, ProjectReducerType>(state => state.project)\r\n  const singleProject = projects?.find(project => project.projectId === id)\r\n\r\n  // @ts-ignore\r\n  const { auth } = useSelector<AppRootStateType>(state => state.firebase)\r\n\r\n\r\n  if (!auth.uid) {\r\n    return <Redirect to={\"/signin\"}/>\r\n  }\r\n\r\n  return (\r\n    <div className={'container section projectDetails'}>\r\n      {\r\n        singleProject &&\r\n        <div className={'card z-depth-0'}>\r\n           <div className={'card-content'}>\r\n              <span className={'card-title center'}> {singleProject.title} </span>\r\n              <p>\r\n                {singleProject.description}\r\n              </p>\r\n              <p>\r\n                {singleProject.projectStatus}\r\n              </p>\r\n           </div>\r\n           <div className={'card-action grey grey-text lighten-4'}>\r\n              <div>\r\n                <strong>Posted by: </strong><i> {singleProject.userFirstName} {singleProject.userLastName}</i>\r\n              </div>\r\n              <div>\r\n                 <strong>Created on: </strong>{moment(singleProject.createdAt.toDate()).format('MMMM Do YYYY, H:mm')}\r\n              </div>\r\n              <Link to={\"/\"}>\r\n                 <button className={'btn grey darken-2 btnBack'}> Go back </button>\r\n              </Link>\r\n           </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectDetails","import React from \"react\";\r\n\r\ntype PreloaderType = {\r\n  size?: string,\r\n  color: string,\r\n}\r\n\r\n\r\nconst Preloader = (props: PreloaderType) => {\r\n  return (\r\n    <div className={`preloader-wrapper ${props.size} active`}>\r\n      <div className={`spinner-layer spinner-${props.color}-only`}>\r\n        <div className={\"circle-clipper left\"}>\r\n          <div className={\"circle\"}/>\r\n        </div>\r\n        <div className={\"gap-patch\"}>\r\n          <div className={\"circle\"}/>\r\n        </div>\r\n        <div className={\"circle-clipper right\"}>\r\n          <div className={\"circle\"}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader\r\n\r\n","import React, {FormEvent, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {signIn} from \"../../store/reducers/authReducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Preloader from \"../common/Preloader\";\r\n\r\nconst SignIn = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  // @ts-ignore\r\n  const { auth } = useSelector<AppRootStateType>(state => state.firebase)\r\n  const loading = useSelector<AppRootStateType>(state => state.appStatus.loading)\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(signIn({email, password}))\r\n  }\r\n\r\n  if (auth.uid) {\r\n    return <Redirect to={\"/\"}/>\r\n  }\r\n\r\n  return (\r\n    <div className={'container'}>\r\n      <form onSubmit={handleSubmit} className={'white'}>\r\n        <h4 className={'grey-text text-darken-3 center'}> Sign In </h4>\r\n        <div className={'row'}>\r\n          <div className={'col s12'}>\r\n            <div className={'input-field'}>\r\n              <label htmlFor=\"email\"> Email </label>\r\n              <input type={\"email\"} id={'email'} value={email} onChange={e => setEmail(e.target.value)}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={'row'}>\r\n          <div className={'col s12'}>\r\n            <div className={'input-field'}>\r\n              <label htmlFor=\"password\"> Password </label>\r\n              <input type={\"password\"} id={'password'} value={password} onChange={e => setPassword(e.target.value)}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={'row'}>\r\n          <div className={'col s12'}>\r\n            <div className={'input-field center'}>\r\n              <button className={'btn green lighten-2 btnSignUP'}> {loading ? <Preloader color={\"green\"} size={\"small\"}/> : \"SIGN IN\"} </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn","import React, {FormEvent, useState} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport Preloader from \"../common/Preloader\";\r\nimport {signUp} from \"../../store/reducers/authReducer\";\r\nimport {firestoreReducer} from \"redux-firestore\";\r\n\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n\r\n\r\n  const auth = useSelector<AppRootStateType, ReturnType<typeof firestoreReducer>>(state => state.firebase.auth)\r\n  const loading = useSelector<AppRootStateType>(state => state.appStatus.loading)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(signUp({email, password, firstName, lastName}))\r\n  }\r\n\r\n  if (auth.uid) {\r\n    return <Redirect to={\"/\"}/>\r\n  }\r\n\r\n  return (\r\n    <div className={'container'}>\r\n      <form onSubmit={handleSubmit} className={'white'}>\r\n        <h4 className={'grey-text text-darken-3 center'}> SIGN UP </h4>\r\n        <div className={'row'}>\r\n          <div className={'col s12 m6'}>\r\n            <div className={'input-field'}>\r\n              <label htmlFor=\"firstName\"> First Name </label>\r\n              <input type={\"text\"} id={'firstName'} value={firstName} onChange={e => setFirstName(e.target.value)}/>\r\n            </div>\r\n          </div>\r\n          <div className={'col s12 m6'}>\r\n            <div className={'input-field'}>\r\n              <label htmlFor=\"lastName\"> Last Name </label>\r\n              <input type={\"text\"} id={'lastName'} value={lastName} onChange={e => setLastName(e.target.value)}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={'row'}>\r\n          <div className={'col s12'}>\r\n            <div className={'input-field'}>\r\n              <label htmlFor=\"email\"> Email </label>\r\n              <input type={\"email\"} id={'email'} value={email} onChange={e => setEmail(e.target.value)}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={'row'}>\r\n          <div className={'col s12'}>\r\n            <div className={'input-field'}>\r\n              <label htmlFor=\"password\"> Password </label>\r\n              <input type={\"password\"} id={'password'} value={password} onChange={e => setPassword(e.target.value)}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={'row'}>\r\n          <div className={'col s12'}>\r\n            <div className={'input-field center'}>\r\n              <button className={'btn green lighten-2 btnSignUP'}> {loading ? <Preloader color={\"green\"} size={\"small\"}/> : \"SIGN UP\"} </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp","import React, {FormEvent, useState} from \"react\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {appStatusReducer} from \"../../store/reducers/appStatusReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addProject, ProjectType} from \"../../store/reducers/projectReducer\";\r\nimport Preloader from \"../common/Preloader\";\r\nimport {firebaseReducer} from \"react-redux-firebase\";\r\n\r\nconst CreateProject = () => {\r\n  const [title, setTitle] = useState('')\r\n  const [description, setDescription] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  const {loading, url} = useSelector<AppRootStateType, ReturnType<typeof appStatusReducer>>(state => state.appStatus)\r\n  const {profile, auth} = useSelector<AppRootStateType, ReturnType<typeof firebaseReducer>>(state => state.firebase)\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    const projectFromForm: ProjectType = {\r\n      title,\r\n      description,\r\n      userFirstName: profile.firstName,\r\n      userLastName: profile.lastName,\r\n      userId: auth.uid,\r\n      projectStatus: \"progress\",\r\n    }\r\n    dispatch(addProject(projectFromForm))\r\n    setTitle('')\r\n    setDescription('')\r\n  }\r\n\r\n  if (!auth.uid) {\r\n    return <Redirect to={\"/signin\"}/>\r\n  }\r\n\r\n  if (url) {\r\n    return <Redirect to={url}/>\r\n  }\r\n\r\n  return (\r\n    <div className={'container'}>\r\n      <form onSubmit={handleSubmit} className={'white'}>\r\n        <h4 className={'grey-text text-darken-3 center'}> Create Project </h4>\r\n        <div className={'row'}>\r\n          <div className={'col s12'}>\r\n            <div className={'input-field'}>\r\n              <label htmlFor=\"title\"> Project Title </label>\r\n              <input type={\"text\"} id={'title'} value={title} onChange={e => setTitle(e.target.value)}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={'row'}>\r\n          <div className={'col s12'}>\r\n            <div className={'input-field'}>\r\n              <label htmlFor=\"description\"> Project Description </label>\r\n              <textarea className={'materialize-textarea'}\r\n                        id={'description'}\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={'row'}>\r\n          <div className={'col s12'}>\r\n            <div className={'input-field center'}>\r\n              <button className={'btn green lighten-2 btnSignUP'}>\r\n                {loading ? <Preloader color={\"green\"} size={\"small\"}/> : `Create Project`}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateProject","import React from 'react';\nimport {Route, Switch, BrowserRouter} from 'react-router-dom';\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Navbar/>\n      <ToastContainer position={\"bottom-right\"} style={{fontSize: \"1.2rem\", textAlign: \"center\"}}/>\n      <Switch>\n        <Route exact path={'/'} component={Dashboard} />\n        <Route path={'/project/:id'} component={ProjectDetails} />\n        <Route path={'/signin'} component={SignIn} />\n        <Route path={'/signup'} component={SignUp} />\n        <Route path={'/create'} component={CreateProject} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport {getFirebase, firebaseReducer} from 'react-redux-firebase';\r\nimport {getFirestore, firestoreReducer, reduxFirestore, createFirestoreInstance} from 'redux-firestore';\r\nimport {authReducer} from \"./reducers/authReducer\";\r\nimport {projectReducer} from \"./reducers/projectReducer\";\r\nimport firebase, {firebaseConfig} from \"./../config/firebaseConfig\";\r\nimport {appStatusReducer} from \"./reducers/appStatusReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n  appStatus: appStatusReducer,\r\n})\r\n\r\n\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    // @ts-ignore\r\n    reduxFirestore(firebase, firebaseConfig),\r\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\r\n  ),\r\n);\r\n\r\nexport const rrfConfig = {\r\n  userProfile: 'users',\r\n  useFirestoreForProfile: true,\r\n  attachAuthIsReady: true,\r\n}\r\n\r\nexport const rrfProps = {\r\n  firebase,\r\n  config: firebaseConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance,\r\n  useFirestoreForProfile: true,\r\n  userProfile: \"users\",\r\n  attachAuthIsReady: true,\r\n};\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../store/store\";\r\nimport { isLoaded } from 'react-redux-firebase'\r\nimport Preloader from \"../components/common/Preloader\";\r\n\r\n// @ts-ignore\r\nconst AuthIsInitialized = ({children}) => {\r\n  const auth = useSelector<AppRootStateType>(state => state.firebase.auth)\r\n  if (!isLoaded(auth)) return <div className={\"main-loader\"}> <Preloader color={\"red\"} size={\"big\"}/> </div>;\r\n  return children\r\n}\r\n\r\nexport default AuthIsInitialized","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {rrfConfig, rrfProps, store} from \"./store/store\";\nimport {ReactReduxFirebaseProvider} from \"react-redux-firebase\";\nimport AuthIsInitialized from \"./helpers/AuthIsInitialized\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps} config={rrfConfig}>\n        <AuthIsInitialized>\n          <App/>\n        </AuthIsInitialized>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}